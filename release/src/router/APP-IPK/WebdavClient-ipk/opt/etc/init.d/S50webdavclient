#! /bin/sh

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/opt/bin

APP_UCLIBC_VERSION=0.9.28
APPS_MOUNTED_PATH=`nvram get apps_mounted_path`
APPS_INSTALL_FOLDER=`nvram get apps_install_folder`
APPS_INSTALL_PATH=$APPS_MOUNTED_PATH/$APPS_INSTALL_FOLDER
APPS_DEV=`nvram get apps_dev`
APPS_PATH=${APPS_MOUNTED_PATH:9}

LANGUAGE_R=`nvram get preferred_lang`

PRODUCTID=`nvram get productid`
LAN_IP=`nvram get lan_ipaddr`
MISCR_HTTPPORT_X=`nvram get misc_httpport_x`
MISCR_HTTP_X=`nvram get misc_http_x`
HTTP_PASSWD=`nvram get http_passwd`
WAN_IP=`nvram get wan0_ipaddr`
DDNS_ENABLE_X=`nvram get ddns_enable_x`
DDNS_HOSTNAME_X=`nvram get ddns_hostname_x`
ENABLE_CLOUDSYNC=`nvram get enable_cloudsync`


chmod -R 777 $APPS_INSTALL_PATH/bin/

chmod -R 777 $APPS_INSTALL_PATH/etc

#if [ ! -d "$APPS_MOUNTED_PATH/asuswebstorage" ]; then
#mkdir -p $APPS_MOUNTED_PATH/asuswebstorage
#fi

#if [ ! -d "$APPS_MOUNTED_PATH/asuswebstorage/xml" ]; then
#mkdir -p $APPS_MOUNTED_PATH/asuswebstorage/xml
#fi

#if [ ! -d "$APPS_MOUNTED_PATH/asuswebstorage/MySyncFolder" ]; then
#mkdir -p $APPS_MOUNTED_PATH/asuswebstorage/MySyncFolder
#fi

#if [ ! -d "$APPS_MOUNTED_PATH/asuswebstorage/inotify_file" ]; then
#mkdir -p $APPS_MOUNTED_PATH/asuswebstorage/inotify_file
#fi

if [ ! -d "/tmp/smartsync_app" ]; then
mkdir -p /tmp/smartsync_app
fi

chmod -R 777 /tmp/smartsync_app

#chmod -R 777 $APPS_MOUNTED_PATH/asuswebstorage
#chmod -R 777 $APPS_MOUNTED_PATH/asuswebstorage/xml
#chmod -R 777 $APPS_MOUNTED_PATH/asuswebstorage/MySyncFolder
#chmod -R 777 $APPS_MOUNTED_PATH/asuswebstorage/inotify_file

#dir_control_file=/opt/etc/asuswebstorage.conf
#if [ ! -f "$dir_control_file" ]; then
#	#echo "The $dir_control_file is not installed yet!"
#	echo "BASE_PATH:$APPS_MOUNTED_PATH">/opt/etc/asuswebstorage.conf
#	echo "USERNAME:nasrouter1">>/opt/etc/asuswebstorage.conf
#	echo "PASSWORD:nasrouter1">>/opt/etc/asuswebstorage.conf
#        echo "SYNC_UP:1">>/opt/etc/asuswebstorage.conf
#	echo "SYNC_DOWN:1">>/opt/etc/asuswebstorage.conf
#fi

#sh /opt/etc/webdav_client_script/webdav_client_usbget start
#sh /opt/etc/cloud_script/cloud_check_general general-check&

#dir_cloudcontrol_file=$APPS_INSTALL_PATH/etc/Cloud_Settings.conf
#conf_path="/opt/etc/webdav.conf"

case "$1" in
  start|force-reload|restart)
	if [ "$ENABLE_CLOUDSYNC" == "0" ]; then
		exit 0
	fi
    #echo -n "Starting webdavclient: "
	#sh /opt/etc/init.d/asuswebstorage_base_link.sh&

	#inotifynum=`ps | grep "inotify" | grep -v "$0" | grep -v "grep" | awk '{printf $5}'`
	#	if [ "$inotifynum" != "./inotify" ]; then
	#		sh /opt/etc/init.d/S50inotify start
	#	fi
	inotifynum=`ps | grep "inotify" | grep -v "$0" | grep -v "grep" | wc -l`
	echo "inotifynum="$inotifynum
	if [ "$inotifynum" != "4" ]; then
	#if [ $inotifynum != 4 ]; then
		sh /opt/etc/init.d/S50inotify restart
			sleep 1
	fi

	touch /tmp/smartsync_app/webdav_client_start


#	if [ -f "$conf_path" ];then
#	        echo "$conf_path exist"
#		if [ ! -s "$conf_path" ];then
#			echo "conf file is blank"
#		else
#			conf_file=`sed -e "s#\(.*\)\/tmp\/mnt\/[a-zA-Z0-9_]*\/\(.*\)#\1$APPS_MOUNTED_PATH\/\2#" $conf_path`
			#echo "new config is $conf_file"
#			echo "$conf_file" >$conf_path
#	        fi
#	 fi
#
	if [ -z "$APPS_MOUNTED_PATH" ]; then
		nvram set apps_state_error=2
		exit 1
	fi

	APP_BIN=$APPS_INSTALL_PATH/bin
	APP_LIB=$APPS_INSTALL_PATH/lib
	#APP_ETC=$APPS_INSTALL_PATH/etc

	APP_LINK_DIR=/tmp/opt
	APP_LINK_BIN=$APP_LINK_DIR/bin
	APP_LINK_LIB=$APP_LINK_DIR/lib

	webdavclientnum=`ps | grep "webdav_client" | grep -v "$0" | grep -v "grep" | wc -l`
	echo "webdavclientnum="$webdavclientnum

	APPS_MOUNTED_TYPE=`mount |grep "/dev/$APPS_DEV on " |awk '{print $5}'`
	if [ "$APPS_MOUNTED_TYPE" != "vfat" ]; then
		
		if [ ! -L "$APP_LINK_DIR" ]; then
			rm -rf $APP_LINK_DIR
			ln -sf $APPS_INSTALL_PATH $APP_LINK_DIR
        fi
		#rm -rf /opt/etc/cloud_general_check &
		#rm -rf /opt/etc/cloud_general_protected &

#		webdavclientnum=`ps | grep "webdav_client" | grep -v "$0" | grep -v "grep" | wc -l`
#		echo "webdavclientnum="$webdavclientnum
		if [ "$1" == "start" ]; then
			if [ "$webdavclientnum" == "0" ]; then
				ln -sf $APP_LIB/libneon.so.27.2.6 $APP_LINK_LIB/libneon.so.27
				ln -sf $APP_LIB/libneon.so.27.2.6 $APP_LINK_LIB/libneon.so
				$APPS_INSTALL_PATH/bin/webdav_client &
			fi
		else
			if [ "$webdavclientnum" != "0" ]; then
				killall  -SIGTERM webdav_client
				sleep 3
				killall -9 webdav_client
			fi
			ln -sf $APP_LIB/libneon.so.27.2.6 $APP_LINK_LIB/libneon.so.27
			ln -sf $APP_LIB/libneon.so.27.2.6 $APP_LINK_LIB/libneon.so
			$APPS_INSTALL_PATH/bin/webdav_client &
		fi
		
		#echo "exit" | nc 127.0.0.1 3569
 		#killall  -9 inotify&

		# libneon
		#ln -sf $APP_LIB/libneon.so.27.2.6 $APP_LINK_LIB/libneon.so.27
		#ln -sf $APP_LIB/libneon.so.27.2.6 $APP_LINK_LIB/libneon.so

		# libexpat
		#ln -sf $APP_LIB/libexpat.so.1.5.2 $APP_LINK_LIB/libexpat.so.1
		#ln -sf $APP_LIB/libexpat.so.1.5.2 $APP_LINK_LIB/libexpat.so
		#rm -rf $APPS_MOUNTED_PATH/asuswebstorage/xml/*.xml
		#rm -rf $APPS_MOUNTED_PATH/Download2/inotify_file/*.*
		#$APPS_INSTALL_PATH/bin/inotify &
		#$APPS_INSTALL_PATH/bin/asuswebstorage &
		#$APPS_INSTALL_PATH/bin/webdav $APPS_MOUNTED_PATH &

		#$APPS_INSTALL_PATH/bin/webdav_client &
		exit 0
	fi

	# Others files or directories
	objs=`ls -a $APPS_INSTALL_PATH |grep -v ^\.__*`
	for obj in $objs; do
		if [ "$obj" == "." ] || [ "$obj" == ".." ]; then
			continue
		fi

		if [ "$obj" != "bin" ] && [ "$obj" != "lib" ]; then
			ln -sf $APPS_INSTALL_PATH/$obj $APP_LINK_DIR/$obj 
		fi
	done


	# BIN
	objs=`ls -a $APP_BIN`
	# ipkg-opt
	ln -sf $APP_BIN/ipkg $APP_LINK_BIN/ipkg-opt

	# ncurses
	ln -sf $APP_BIN/tic $APP_LINK_BIN/captoinfo
	ln -sf $APP_BIN/tic $APP_LINK_BIN/infotocap
	ln -sf $APP_BIN/tset $APP_LINK_BIN/reset

	for obj in $objs; do
		if [ "$obj" == "." ] || [ "$obj" == ".." ]; then
			continue
		fi

		ln -sf $APP_BIN/$obj $APP_LINK_BIN/$obj 
	done


	# LIB
	objs=`ls -a $APP_LIB`
	# first find the other objs and then do uclibc.
	for obj in $objs; do
		if [ "$obj" == "." ] || [ "$obj" == ".." ]; then
			continue
		fi

		ln -sf $APP_LIB/$obj $APP_LINK_LIB/$obj 
	done

	# ipkg-opt
	ln -sf $APP_LIB/libipkg.so.0.0.0 $APP_LINK_LIB/libipkg.so.0
	ln -sf $APP_LIB/libipkg.so.0.0.0 $APP_LINK_LIB/libipkg.so

	# uclibc-opt
	ln -sf $APP_LIB/ld-uClibc-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/ld-uClibc.so.0
	ln -sf $APP_LIB/libuClibc-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libc.so.0
	ln -sf $APP_LIB/libc.so.0 $APP_LINK_LIB/libc.so
	ln -sf $APP_LIB/libcrypt-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libcrypt.so.0
	ln -sf $APP_LIB/libcrypt.so.0 $APP_LINK_LIB/libcrypt.so
	ln -sf $APP_LIB/libdl-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libdl.so.0
	ln -sf $APP_LIB/libdl.so.0 $APP_LINK_LIB/libdl.so
	ln -sf $APP_LIB/libgcc_s.so.1 $APP_LINK_LIB/libgcc_s.so
	ln -sf $APP_LIB/libintl-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libintl.so.0
	ln -sf $APP_LIB/libintl.so.0 $APP_LINK_LIB/libintl.so
	ln -sf $APP_LIB/libm-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libm.so.0
	ln -sf $APP_LIB/libm.so.0 $APP_LINK_LIB/libm.so
	ln -sf $APP_LIB/libmudflap.so.0.0.0 $APP_LINK_LIB/libmudflap.so.0
	ln -sf $APP_LIB/libmudflap.so.0.0.0 $APP_LINK_LIB/libmudflap.so
	ln -sf $APP_LIB/libmudflapth.so.0.0.0 $APP_LINK_LIB/libmudflapth.so.0
	ln -sf $APP_LIB/libmudflapth.so.0.0.0 $APP_LINK_LIB/libmudflapth.so
	ln -sf $APP_LIB/libnsl-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libnsl.so.0
	ln -sf $APP_LIB/libnsl.so.0 $APP_LINK_LIB/libnsl.so
	ln -sf $APP_LIB/libpthread-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libpthread.so.0
	ln -sf $APP_LIB/libpthread.so.0 $APP_LINK_LIB/libpthread.so
	ln -sf $APP_LIB/libresolv-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libresolv.so.0
	ln -sf $APP_LIB/libresolv.so.0 $APP_LINK_LIB/libresolv.so
	ln -sf $APP_LIB/librt-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/librt.so.0
	ln -sf $APP_LIB/librt.so.0 $APP_LINK_LIB/librt.so
	ln -sf $APP_LIB/libstdc++.so.6.0.8 $APP_LINK_LIB/libstdc++.so.6
	ln -sf $APP_LIB/libstdc++.so.6.0.8 $APP_LINK_LIB/libstdc++.so
	ln -sf $APP_LIB/libthread_db-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libthread_db.so.1
	ln -sf $APP_LIB/libthread_db.so.1 $APP_LINK_LIB/libthread_db.so
	ln -sf $APP_LIB/libutil-${APP_UCLIBC_VERSION}.so $APP_LINK_LIB/libutil.so.0
	ln -sf $APP_LIB/libutil.so.0 $APP_LINK_LIB/libutil.so

	# openssl
	ln -sf $APP_LIB/libcrypto.so.0.9.7 $APP_LINK_LIB/libcrypto.so.0
	ln -sf $APP_LIB/libcrypto.so.0.9.7 $APP_LINK_LIB/libcrypto.so
	ln -sf $APP_LIB/libssl.so.0.9.7 $APP_LINK_LIB/libssl.so.0
	ln -sf $APP_LIB/libssl.so.0.9.7 $APP_LINK_LIB/libssl.so

	# zlib
	ln -sf $APP_LIB/libz.so.1.2.5 $APP_LINK_LIB/libz.so.1
	ln -sf $APP_LIB/libz.so.1.2.5 $APP_LINK_LIB/libz.so
	# libcurl
	#ln -sf $APP_LIB/libcurl.so.4.2.0 $APP_LINK_LIB/libcurl.so.4
	#ln -sf $APP_LIB/libcurl.so.4.2.0 $APP_LINK_LIB/libcurl.so

	# libevent
	#ln -sf $APP_LIB/libevent-2.0.so.5.1.0 $APP_LINK_LIB/libevent-2.0.so.5
	#ln -sf $APP_LIB/libevent-2.0.so.5.1.0 $APP_LINK_LIB/libevent.so
	#ln -sf $APP_LIB/libevent_core-2.0.so.5.1.0 $APP_LINK_LIB/libevent_core-2.0.so.5
	#ln -sf $APP_LIB/libevent_core-2.0.so.5.1.0 $APP_LINK_LIB/libevent_core.so
	#ln -sf $APP_LIB/libevent_extra-2.0.so.5.1.0 $APP_LINK_LIB/libevent_extra-2.0.so.5
	#ln -sf $APP_LIB/libevent_extra-2.0.so.5.1.0 $APP_LINK_LIB/libevent_extra.so
	#ln -sf $APP_LIB/libevent_openssl-2.0.so.5.1.0 $APP_LINK_LIB/libevent_openssl-2.0.so.5
	#ln -sf $APP_LIB/libevent_openssl-2.0.so.5.1.0 $APP_LINK_LIB/libevent_openssl.so
	#ln -sf $APP_LIB/libevent_pthreads-2.0.so.5.1.0 $APP_LINK_LIB/libevent_pthreads-2.0.so.5
	#ln -sf $APP_LIB/libevent_pthreads-2.0.so.5.1.0 $APP_LINK_LIB/libevent_pthreads.so

	# ncurses
	#ln -sf $APP_LIB/libform.so.5.7 $APP_LINK_LIB/libform.so.5
	#ln -sf $APP_LIB/libform.so.5 $APP_LINK_LIB/libform.so
	#ln -sf $APP_LIB/libmenu.so.5.7 $APP_LINK_LIB/libmenu.so.5
	#ln -sf $APP_LIB/libmenu.so.5 $APP_LINK_LIB/libmenu.so
	#ln -sf $APP_LIB/libncurses.so.5.7 $APP_LINK_LIB/libncurses.so.5
	#ln -sf $APP_LIB/libncurses.so.5 $APP_LINK_LIB/libncurses.so
	#ln -sf $APP_LIB/libpanel.so.5.7 $APP_LINK_LIB/libpanel.so.5
	#ln -sf $APP_LIB/libpanel.so.5 $APP_LINK_LIB/libpanel.so
	#ln -sf $APP_LIB/../share/terminfo $APP_LINK_LIB/terminfo

	# libxml2
	ln -sf $APP_LIB/libxml2.so.2.7.8 $APP_LINK_LIB/libxml2.so.2
	ln -sf $APP_LIB/libxml2.so.2.7.8 $APP_LINK_LIB/libxml2.so

	# libuclibc++
	#ln -sf $APP_LIB/libuClibc++-0.2.3.so $APP_LINK_LIB/libuClibc++.so.0
	#ln -sf $APP_LIB/libuClibc++.so.0 $APP_LINK_LIB/libuClibc++.so

	# libsigc++
	#ln -sf $APP_LIB/libsigc-2.0.so.0.0.0 $APP_LINK_LIB/libsigc-2.0.so.0
	#ln -sf $APP_LIB/libsigc-2.0.so.0.0.0 $APP_LINK_LIB/libsigc-2.0.so

	# libpar2
	#ln -sf $APP_LIB/libpar2.so.0.0.1 $APP_LINK_LIB/libpar2.so.0
	#ln -sf $APP_LIB/libpar2.so.0.0.1 $APP_LINK_LIB/libpar2.so

	# pcre
	#ln -sf $APP_LIB/libpcre.so.0.0.1 $APP_LINK_LIB/libpcre.so.0
	#ln -sf $APP_LIB/libpcre.so.0.0.1 $APP_LINK_LIB/libpcre.so
	#ln -sf $APP_LIB/libpcrecpp.so.0.0.0 $APP_LINK_LIB/libpcrecpp.so.0
	#ln -sf $APP_LIB/libpcrecpp.so.0.0.0 $APP_LINK_LIB/libpcrecpp.so
	#ln -sf $APP_LIB/libpcreposix.so.0.0.0 $APP_LINK_LIB/libpcreposix.so.0
	#ln -sf $APP_LIB/libpcreposix.so.0.0.0 $APP_LINK_LIB/libpcreposix.so

	# libneon
	ln -sf $APP_LIB/libneon.so.27.2.6 $APP_LINK_LIB/libneon.so.27
	ln -sf $APP_LIB/libneon.so.27.2.6 $APP_LINK_LIB/libneon.so

	# libexpat
	#ln -sf $APP_LIB/libexpat.so.1.5.2 $APP_LINK_LIB/libexpat.so.1
	#ln -sf $APP_LIB/libexpat.so.1.5.2 $APP_LINK_LIB/libexpat.so

	#rm -rf $APPS_MOUNTED_PATH/asuswebstorage/xml/*.xml
	#rm -rf $APPS_MOUNTED_PATH/Download2/inotify_file/*.*
	#$APPS_INSTALL_PATH/bin/inotify &
	#$APPS_INSTALL_PATH/bin/asuswebstorage &
	#$APPS_INSTALL_PATH/bin/webdav $APPS_MOUNTED_PATH &
	if [ "$1" == "start" ]; then
		if [ "$webdavclientnum" == "0" ]; then
			$APPS_INSTALL_PATH/bin/webdav_client &
		fi
	else
		if [ "$webdavclientnum" != "0" ]; then
			killall  -SIGTERM webdav_client
			sleep 3
			killall -9 webdav_client
		fi
		$APPS_INSTALL_PATH/bin/webdav_client &
	fi
    ;;
  stop)
    #echo -n "Stopping DM: "
        #killall  asuswebstorage&
	rm -rf /tmp/smartsync_app/webdav_client_start
	APP_CHECK=`ls /tmp/smartsync_app`
	if [ -z "$APP_CHECK" ]; then
		killall -9 inotify&
	fi
	killall  -SIGTERM webdav_client &
	#echo "exit" | nc 127.0.0.1 3569
	#killall  -9 inotify&

	#rm -rf /opt/etc/cloud_general_check &
	#rm -rf /opt/etc/cloud_general_protected &
	#rm -rf $APPS_MOUNTED_PATH/asuswebstorage/xml/*.xml
	#rm -rf $APPS_MOUNTED_PATH/Download2/inotify_file/*.*
    #echo "DM2.0."
    ;;
#  force-reload|restart)
    #echo "Restarting DM: "
	#sh $APPS_INSTALL_PATH/etc/init.d/S50webdavclient start
    #sh $APPS_INSTALL_PATH/etc/init.d/S50webdav stop
    #sh $APPS_INSTALL_PATH/etc/init.d/S50webdav start
#    ;;

    
  
  *)
    exit 1
    ;;
esac
